/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ClientProfileLives', function() {
      beforeEach(function() {
        instance = new MilestoneIntegrationPlatformVmsResTfulApi.ClientProfileLives();
      });

      it('should create an instance of ClientProfileLives', function() {
        // TODO: update the code to test ClientProfileLives
        expect(instance).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.ClientProfileLives);
      });

      it('should have the property displayName (base name: "displayName")', function() {
        // TODO: update the code to test the property displayName
        expect(instance).to.have.property('displayName');
        // expect(instance.displayName).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveTab (base name: "panesLiveTab")', function() {
        // TODO: update the code to test the property panesLiveTab
        expect(instance).to.have.property('panesLiveTab');
        // expect(instance.panesLiveTab).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveViews (base name: "panesLiveViews")', function() {
        // TODO: update the code to test the property panesLiveViews
        expect(instance).to.have.property('panesLiveViews');
        // expect(instance.panesLiveViews).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveViewsLocked (base name: "panesLiveViewsLocked")', function() {
        // TODO: update the code to test the property panesLiveViewsLocked
        expect(instance).to.have.property('panesLiveViewsLocked');
        // expect(instance.panesLiveViewsLocked).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveSystemOverview (base name: "panesLiveSystemOverview")', function() {
        // TODO: update the code to test the property panesLiveSystemOverview
        expect(instance).to.have.property('panesLiveSystemOverview');
        // expect(instance.panesLiveSystemOverview).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveSystemOverviewLocked (base name: "panesLiveSystemOverviewLocked")', function() {
        // TODO: update the code to test the property panesLiveSystemOverviewLocked
        expect(instance).to.have.property('panesLiveSystemOverviewLocked');
        // expect(instance.panesLiveSystemOverviewLocked).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveAudio (base name: "panesLiveAudio")', function() {
        // TODO: update the code to test the property panesLiveAudio
        expect(instance).to.have.property('panesLiveAudio');
        // expect(instance.panesLiveAudio).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveAudioLocked (base name: "panesLiveAudioLocked")', function() {
        // TODO: update the code to test the property panesLiveAudioLocked
        expect(instance).to.have.property('panesLiveAudioLocked');
        // expect(instance.panesLiveAudioLocked).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveOutputs (base name: "panesLiveOutputs")', function() {
        // TODO: update the code to test the property panesLiveOutputs
        expect(instance).to.have.property('panesLiveOutputs');
        // expect(instance.panesLiveOutputs).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveOutputsLocked (base name: "panesLiveOutputsLocked")', function() {
        // TODO: update the code to test the property panesLiveOutputsLocked
        expect(instance).to.have.property('panesLiveOutputsLocked');
        // expect(instance.panesLiveOutputsLocked).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveEvents (base name: "panesLiveEvents")', function() {
        // TODO: update the code to test the property panesLiveEvents
        expect(instance).to.have.property('panesLiveEvents');
        // expect(instance.panesLiveEvents).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveEventsLocked (base name: "panesLiveEventsLocked")', function() {
        // TODO: update the code to test the property panesLiveEventsLocked
        expect(instance).to.have.property('panesLiveEventsLocked');
        // expect(instance.panesLiveEventsLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveBookmarkMode (base name: "functionsLiveBookmarkMode")', function() {
        // TODO: update the code to test the property functionsLiveBookmarkMode
        expect(instance).to.have.property('functionsLiveBookmarkMode');
        // expect(instance.functionsLiveBookmarkMode).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveBookmarkModeLocked (base name: "functionsLiveBookmarkModeLocked")', function() {
        // TODO: update the code to test the property functionsLiveBookmarkModeLocked
        expect(instance).to.have.property('functionsLiveBookmarkModeLocked');
        // expect(instance.functionsLiveBookmarkModeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLivePrintAvailability (base name: "functionsLivePrintAvailability")', function() {
        // TODO: update the code to test the property functionsLivePrintAvailability
        expect(instance).to.have.property('functionsLivePrintAvailability');
        // expect(instance.functionsLivePrintAvailability).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLivePrintAvailabilityLocked (base name: "functionsLivePrintAvailabilityLocked")', function() {
        // TODO: update the code to test the property functionsLivePrintAvailabilityLocked
        expect(instance).to.have.property('functionsLivePrintAvailabilityLocked');
        // expect(instance.functionsLivePrintAvailabilityLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveCameraPlayback (base name: "functionsLiveCameraPlayback")', function() {
        // TODO: update the code to test the property functionsLiveCameraPlayback
        expect(instance).to.have.property('functionsLiveCameraPlayback');
        // expect(instance.functionsLiveCameraPlayback).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveCameraPlaybackLocked (base name: "functionsLiveCameraPlaybackLocked")', function() {
        // TODO: update the code to test the property functionsLiveCameraPlaybackLocked
        expect(instance).to.have.property('functionsLiveCameraPlaybackLocked');
        // expect(instance.functionsLiveCameraPlaybackLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveOverlayButtons (base name: "functionsLiveOverlayButtons")', function() {
        // TODO: update the code to test the property functionsLiveOverlayButtons
        expect(instance).to.have.property('functionsLiveOverlayButtons');
        // expect(instance.functionsLiveOverlayButtons).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveOverlayButtonsLocked (base name: "functionsLiveOverlayButtonsLocked")', function() {
        // TODO: update the code to test the property functionsLiveOverlayButtonsLocked
        expect(instance).to.have.property('functionsLiveOverlayButtonsLocked');
        // expect(instance.functionsLiveOverlayButtonsLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveBoundingBoxes (base name: "functionsLiveBoundingBoxes")', function() {
        // TODO: update the code to test the property functionsLiveBoundingBoxes
        expect(instance).to.have.property('functionsLiveBoundingBoxes');
        // expect(instance.functionsLiveBoundingBoxes).to.be(expectedValueLiteral);
      });

      it('should have the property functionsLiveBoundingBoxesLocked (base name: "functionsLiveBoundingBoxesLocked")', function() {
        // TODO: update the code to test the property functionsLiveBoundingBoxesLocked
        expect(instance).to.have.property('functionsLiveBoundingBoxesLocked');
        // expect(instance.functionsLiveBoundingBoxesLocked).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveMIPPlugin (base name: "panesLiveMIPPlugin")', function() {
        // TODO: update the code to test the property panesLiveMIPPlugin
        expect(instance).to.have.property('panesLiveMIPPlugin');
        // expect(instance.panesLiveMIPPlugin).to.be(expectedValueLiteral);
      });

      it('should have the property panesLiveMIPPluginLocked (base name: "panesLiveMIPPluginLocked")', function() {
        // TODO: update the code to test the property panesLiveMIPPluginLocked
        expect(instance).to.have.property('panesLiveMIPPluginLocked');
        // expect(instance.panesLiveMIPPluginLocked).to.be(expectedValueLiteral);
      });

    });
  });

}));
