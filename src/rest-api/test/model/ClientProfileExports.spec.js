/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ClientProfileExports', function() {
      beforeEach(function() {
        instance = new MilestoneIntegrationPlatformVmsResTfulApi.ClientProfileExports();
      });

      it('should create an instance of ClientProfileExports', function() {
        // TODO: update the code to test ClientProfileExports
        expect(instance).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.ClientProfileExports);
      });

      it('should have the property displayName (base name: "displayName")', function() {
        // TODO: update the code to test the property displayName
        expect(instance).to.have.property('displayName');
        // expect(instance.displayName).to.be(expectedValueLiteral);
      });

      it('should have the property panesPlaybackExport (base name: "panesPlaybackExport")', function() {
        // TODO: update the code to test the property panesPlaybackExport
        expect(instance).to.have.property('panesPlaybackExport');
        // expect(instance.panesPlaybackExport).to.be(expectedValueLiteral);
      });

      it('should have the property exportDestinationType (base name: "exportDestinationType")', function() {
        // TODO: update the code to test the property exportDestinationType
        expect(instance).to.have.property('exportDestinationType');
        // expect(instance.exportDestinationType).to.be(expectedValueLiteral);
      });

      it('should have the property exportDestinationTypeLocked (base name: "exportDestinationTypeLocked")', function() {
        // TODO: update the code to test the property exportDestinationTypeLocked
        expect(instance).to.have.property('exportDestinationTypeLocked');
        // expect(instance.exportDestinationTypeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property functionsPlaybackExportPath (base name: "functionsPlaybackExportPath")', function() {
        // TODO: update the code to test the property functionsPlaybackExportPath
        expect(instance).to.have.property('functionsPlaybackExportPath');
        // expect(instance.functionsPlaybackExportPath).to.be(expectedValueLiteral);
      });

      it('should have the property functionsPlaybackExportPathCustom (base name: "functionsPlaybackExportPathCustom")', function() {
        // TODO: update the code to test the property functionsPlaybackExportPathCustom
        expect(instance).to.have.property('functionsPlaybackExportPathCustom');
        // expect(instance.functionsPlaybackExportPathCustom).to.be(expectedValueLiteral);
      });

      it('should have the property functionsPlaybackExportPathCustomLocked (base name: "functionsPlaybackExportPathCustomLocked")', function() {
        // TODO: update the code to test the property functionsPlaybackExportPathCustomLocked
        expect(instance).to.have.property('functionsPlaybackExportPathCustomLocked');
        // expect(instance.functionsPlaybackExportPathCustomLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportPrivacyMask (base name: "exportPrivacyMask")', function() {
        // TODO: update the code to test the property exportPrivacyMask
        expect(instance).to.have.property('exportPrivacyMask');
        // expect(instance.exportPrivacyMask).to.be(expectedValueLiteral);
      });

      it('should have the property exportPrivacyMaskLocked (base name: "exportPrivacyMaskLocked")', function() {
        // TODO: update the code to test the property exportPrivacyMaskLocked
        expect(instance).to.have.property('exportPrivacyMaskLocked');
        // expect(instance.exportPrivacyMaskLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipFormat (base name: "exportVideoClipFormat")', function() {
        // TODO: update the code to test the property exportVideoClipFormat
        expect(instance).to.have.property('exportVideoClipFormat');
        // expect(instance.exportVideoClipFormat).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipFormatLocked (base name: "exportVideoClipFormatLocked")', function() {
        // TODO: update the code to test the property exportVideoClipFormatLocked
        expect(instance).to.have.property('exportVideoClipFormatLocked');
        // expect(instance.exportVideoClipFormatLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipType (base name: "exportVideoClipType")', function() {
        // TODO: update the code to test the property exportVideoClipType
        expect(instance).to.have.property('exportVideoClipType');
        // expect(instance.exportVideoClipType).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTypeLocked (base name: "exportVideoClipTypeLocked")', function() {
        // TODO: update the code to test the property exportVideoClipTypeLocked
        expect(instance).to.have.property('exportVideoClipTypeLocked');
        // expect(instance.exportVideoClipTypeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipOutputType (base name: "exportVideoClipOutputType")', function() {
        // TODO: update the code to test the property exportVideoClipOutputType
        expect(instance).to.have.property('exportVideoClipOutputType');
        // expect(instance.exportVideoClipOutputType).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipOutputTypeLocked (base name: "exportVideoClipOutputTypeLocked")', function() {
        // TODO: update the code to test the property exportVideoClipOutputTypeLocked
        expect(instance).to.have.property('exportVideoClipOutputTypeLocked');
        // expect(instance.exportVideoClipOutputTypeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTimestamp (base name: "exportVideoClipTimestamp")', function() {
        // TODO: update the code to test the property exportVideoClipTimestamp
        expect(instance).to.have.property('exportVideoClipTimestamp');
        // expect(instance.exportVideoClipTimestamp).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTimestampLocked (base name: "exportVideoClipTimestampLocked")', function() {
        // TODO: update the code to test the property exportVideoClipTimestampLocked
        expect(instance).to.have.property('exportVideoClipTimestampLocked');
        // expect(instance.exportVideoClipTimestampLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipFrameRate (base name: "exportVideoClipFrameRate")', function() {
        // TODO: update the code to test the property exportVideoClipFrameRate
        expect(instance).to.have.property('exportVideoClipFrameRate');
        // expect(instance.exportVideoClipFrameRate).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipFrameRateLocked (base name: "exportVideoClipFrameRateLocked")', function() {
        // TODO: update the code to test the property exportVideoClipFrameRateLocked
        expect(instance).to.have.property('exportVideoClipFrameRateLocked');
        // expect(instance.exportVideoClipFrameRateLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTextsMode (base name: "exportVideoClipTextsMode")', function() {
        // TODO: update the code to test the property exportVideoClipTextsMode
        expect(instance).to.have.property('exportVideoClipTextsMode');
        // expect(instance.exportVideoClipTextsMode).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTextsContent (base name: "exportVideoClipTextsContent")', function() {
        // TODO: update the code to test the property exportVideoClipTextsContent
        expect(instance).to.have.property('exportVideoClipTextsContent');
        // expect(instance.exportVideoClipTextsContent).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipTextsContentLocked (base name: "exportVideoClipTextsContentLocked")', function() {
        // TODO: update the code to test the property exportVideoClipTextsContentLocked
        expect(instance).to.have.property('exportVideoClipTextsContentLocked');
        // expect(instance.exportVideoClipTextsContentLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipCodecProperties (base name: "exportVideoClipCodecProperties")', function() {
        // TODO: update the code to test the property exportVideoClipCodecProperties
        expect(instance).to.have.property('exportVideoClipCodecProperties');
        // expect(instance.exportVideoClipCodecProperties).to.be(expectedValueLiteral);
      });

      it('should have the property exportVideoClipCodecPropertiesLocked (base name: "exportVideoClipCodecPropertiesLocked")', function() {
        // TODO: update the code to test the property exportVideoClipCodecPropertiesLocked
        expect(instance).to.have.property('exportVideoClipCodecPropertiesLocked');
        // expect(instance.exportVideoClipCodecPropertiesLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerFormat (base name: "exportSmartClientPlayerFormat")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerFormat
        expect(instance).to.have.property('exportSmartClientPlayerFormat');
        // expect(instance.exportSmartClientPlayerFormat).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerFormatLocked (base name: "exportSmartClientPlayerFormatLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerFormatLocked
        expect(instance).to.have.property('exportSmartClientPlayerFormatLocked');
        // expect(instance.exportSmartClientPlayerFormatLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerIncludePlayer (base name: "exportSmartClientPlayerIncludePlayer")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerIncludePlayer
        expect(instance).to.have.property('exportSmartClientPlayerIncludePlayer');
        // expect(instance.exportSmartClientPlayerIncludePlayer).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerIncludePlayerLocked (base name: "exportSmartClientPlayerIncludePlayerLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerIncludePlayerLocked
        expect(instance).to.have.property('exportSmartClientPlayerIncludePlayerLocked');
        // expect(instance.exportSmartClientPlayerIncludePlayerLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerLockForReExport (base name: "exportSmartClientPlayerLockForReExport")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerLockForReExport
        expect(instance).to.have.property('exportSmartClientPlayerLockForReExport');
        // expect(instance.exportSmartClientPlayerLockForReExport).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerLockForReExportLocked (base name: "exportSmartClientPlayerLockForReExportLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerLockForReExportLocked
        expect(instance).to.have.property('exportSmartClientPlayerLockForReExportLocked');
        // expect(instance.exportSmartClientPlayerLockForReExportLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptDatabases (base name: "exportSmartClientPlayerEncryptDatabases")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptDatabases
        expect(instance).to.have.property('exportSmartClientPlayerEncryptDatabases');
        // expect(instance.exportSmartClientPlayerEncryptDatabases).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptDatabasesLocked (base name: "exportSmartClientPlayerEncryptDatabasesLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptDatabasesLocked
        expect(instance).to.have.property('exportSmartClientPlayerEncryptDatabasesLocked');
        // expect(instance.exportSmartClientPlayerEncryptDatabasesLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptPassword (base name: "exportSmartClientPlayerEncryptPassword")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptPassword
        expect(instance).to.have.property('exportSmartClientPlayerEncryptPassword');
        // expect(instance.exportSmartClientPlayerEncryptPassword).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptPasswordLocked (base name: "exportSmartClientPlayerEncryptPasswordLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptPasswordLocked
        expect(instance).to.have.property('exportSmartClientPlayerEncryptPasswordLocked');
        // expect(instance.exportSmartClientPlayerEncryptPasswordLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptionStrength (base name: "exportSmartClientPlayerEncryptionStrength")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptionStrength
        expect(instance).to.have.property('exportSmartClientPlayerEncryptionStrength');
        // expect(instance.exportSmartClientPlayerEncryptionStrength).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerEncryptionStrengthLocked (base name: "exportSmartClientPlayerEncryptionStrengthLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerEncryptionStrengthLocked
        expect(instance).to.have.property('exportSmartClientPlayerEncryptionStrengthLocked');
        // expect(instance.exportSmartClientPlayerEncryptionStrengthLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerGlobalCommentsMode (base name: "exportSmartClientPlayerGlobalCommentsMode")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerGlobalCommentsMode
        expect(instance).to.have.property('exportSmartClientPlayerGlobalCommentsMode');
        // expect(instance.exportSmartClientPlayerGlobalCommentsMode).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerGlobalCommentsModeLocked (base name: "exportSmartClientPlayerGlobalCommentsModeLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerGlobalCommentsModeLocked
        expect(instance).to.have.property('exportSmartClientPlayerGlobalCommentsModeLocked');
        // expect(instance.exportSmartClientPlayerGlobalCommentsModeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerGlobalCommentsContent (base name: "exportSmartClientPlayerGlobalCommentsContent")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerGlobalCommentsContent
        expect(instance).to.have.property('exportSmartClientPlayerGlobalCommentsContent');
        // expect(instance.exportSmartClientPlayerGlobalCommentsContent).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerGlobalCommentsContentLocked (base name: "exportSmartClientPlayerGlobalCommentsContentLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerGlobalCommentsContentLocked
        expect(instance).to.have.property('exportSmartClientPlayerGlobalCommentsContentLocked');
        // expect(instance.exportSmartClientPlayerGlobalCommentsContentLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerIndividualCommentsMode (base name: "exportSmartClientPlayerIndividualCommentsMode")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerIndividualCommentsMode
        expect(instance).to.have.property('exportSmartClientPlayerIndividualCommentsMode');
        // expect(instance.exportSmartClientPlayerIndividualCommentsMode).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerIndividualCommentsModeLocked (base name: "exportSmartClientPlayerIndividualCommentsModeLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerIndividualCommentsModeLocked
        expect(instance).to.have.property('exportSmartClientPlayerIndividualCommentsModeLocked');
        // expect(instance.exportSmartClientPlayerIndividualCommentsModeLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerSignData (base name: "exportSmartClientPlayerSignData")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerSignData
        expect(instance).to.have.property('exportSmartClientPlayerSignData');
        // expect(instance.exportSmartClientPlayerSignData).to.be(expectedValueLiteral);
      });

      it('should have the property exportSmartClientPlayerSignDataLocked (base name: "exportSmartClientPlayerSignDataLocked")', function() {
        // TODO: update the code to test the property exportSmartClientPlayerSignDataLocked
        expect(instance).to.have.property('exportSmartClientPlayerSignDataLocked');
        // expect(instance.exportSmartClientPlayerSignDataLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportStillImageFormat (base name: "exportStillImageFormat")', function() {
        // TODO: update the code to test the property exportStillImageFormat
        expect(instance).to.have.property('exportStillImageFormat');
        // expect(instance.exportStillImageFormat).to.be(expectedValueLiteral);
      });

      it('should have the property exportStillImageFormatLocked (base name: "exportStillImageFormatLocked")', function() {
        // TODO: update the code to test the property exportStillImageFormatLocked
        expect(instance).to.have.property('exportStillImageFormatLocked');
        // expect(instance.exportStillImageFormatLocked).to.be(expectedValueLiteral);
      });

      it('should have the property exportStillImageTimestamp (base name: "exportStillImageTimestamp")', function() {
        // TODO: update the code to test the property exportStillImageTimestamp
        expect(instance).to.have.property('exportStillImageTimestamp');
        // expect(instance.exportStillImageTimestamp).to.be(expectedValueLiteral);
      });

      it('should have the property exportStillImageTimestampLocked (base name: "exportStillImageTimestampLocked")', function() {
        // TODO: update the code to test the property exportStillImageTimestampLocked
        expect(instance).to.have.property('exportStillImageTimestampLocked');
        // expect(instance.exportStillImageTimestampLocked).to.be(expectedValueLiteral);
      });

    });
  });

}));
