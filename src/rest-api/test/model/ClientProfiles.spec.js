/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ClientProfiles', function() {
      beforeEach(function() {
        instance = new MilestoneIntegrationPlatformVmsResTfulApi.ClientProfiles();
      });

      it('should create an instance of ClientProfiles', function() {
        // TODO: update the code to test ClientProfiles
        expect(instance).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.ClientProfiles);
      });

      it('should have the property displayName (base name: "displayName")', function() {
        // TODO: update the code to test the property displayName
        expect(instance).to.have.property('displayName');
        // expect(instance.displayName).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property isDefaultProfile (base name: "isDefaultProfile")', function() {
        // TODO: update the code to test the property isDefaultProfile
        expect(instance).to.have.property('isDefaultProfile');
        // expect(instance.isDefaultProfile).to.be(expectedValueLiteral);
      });

      it('should have the property lastModified (base name: "lastModified")', function() {
        // TODO: update the code to test the property lastModified
        expect(instance).to.have.property('lastModified');
        // expect(instance.lastModified).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileAccessControls (base name: "clientProfileAccessControls")', function() {
        // TODO: update the code to test the property clientProfileAccessControls
        expect(instance).to.have.property('clientProfileAccessControls');
        // expect(instance.clientProfileAccessControls).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileAdvanceds (base name: "clientProfileAdvanceds")', function() {
        // TODO: update the code to test the property clientProfileAdvanceds
        expect(instance).to.have.property('clientProfileAdvanceds');
        // expect(instance.clientProfileAdvanceds).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileAlarmManagers (base name: "clientProfileAlarmManagers")', function() {
        // TODO: update the code to test the property clientProfileAlarmManagers
        expect(instance).to.have.property('clientProfileAlarmManagers');
        // expect(instance.clientProfileAlarmManagers).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileExports (base name: "clientProfileExports")', function() {
        // TODO: update the code to test the property clientProfileExports
        expect(instance).to.have.property('clientProfileExports');
        // expect(instance.clientProfileExports).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileGenerals (base name: "clientProfileGenerals")', function() {
        // TODO: update the code to test the property clientProfileGenerals
        expect(instance).to.have.property('clientProfileGenerals');
        // expect(instance.clientProfileGenerals).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileGisMaps (base name: "clientProfileGisMaps")', function() {
        // TODO: update the code to test the property clientProfileGisMaps
        expect(instance).to.have.property('clientProfileGisMaps');
        // expect(instance.clientProfileGisMaps).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileLives (base name: "clientProfileLives")', function() {
        // TODO: update the code to test the property clientProfileLives
        expect(instance).to.have.property('clientProfileLives');
        // expect(instance.clientProfileLives).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfilePlaybacks (base name: "clientProfilePlaybacks")', function() {
        // TODO: update the code to test the property clientProfilePlaybacks
        expect(instance).to.have.property('clientProfilePlaybacks');
        // expect(instance.clientProfilePlaybacks).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileSetups (base name: "clientProfileSetups")', function() {
        // TODO: update the code to test the property clientProfileSetups
        expect(instance).to.have.property('clientProfileSetups');
        // expect(instance.clientProfileSetups).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileTimelines (base name: "clientProfileTimelines")', function() {
        // TODO: update the code to test the property clientProfileTimelines
        expect(instance).to.have.property('clientProfileTimelines');
        // expect(instance.clientProfileTimelines).to.be(expectedValueLiteral);
      });

      it('should have the property clientProfileViewLayouts (base name: "clientProfileViewLayouts")', function() {
        // TODO: update the code to test the property clientProfileViewLayouts
        expect(instance).to.have.property('clientProfileViewLayouts');
        // expect(instance.clientProfileViewLayouts).to.be(expectedValueLiteral);
      });

      it('should have the property relations (base name: "relations")', function() {
        // TODO: update the code to test the property relations
        expect(instance).to.have.property('relations');
        // expect(instance.relations).to.be(expectedValueLiteral);
      });

    });
  });

}));
