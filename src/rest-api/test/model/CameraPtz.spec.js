/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CameraPtz', function() {
      beforeEach(function() {
        instance = new MilestoneIntegrationPlatformVmsResTfulApi.CameraPtz();
      });

      it('should create an instance of CameraPtz', function() {
        // TODO: update the code to test CameraPtz
        expect(instance).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.CameraPtz);
      });

      it('should have the property displayName (base name: "displayName")', function() {
        // TODO: update the code to test the property displayName
        expect(instance).to.have.property('displayName');
        // expect(instance.displayName).to.be(expectedValueLiteral);
      });

      it('should have the property ptzEnabled (base name: "ptzEnabled")', function() {
        // TODO: update the code to test the property ptzEnabled
        expect(instance).to.have.property('ptzEnabled');
        // expect(instance.ptzEnabled).to.be(expectedValueLiteral);
      });

      it('should have the property ptzCenterOnPositionInView (base name: "ptzCenterOnPositionInView")', function() {
        // TODO: update the code to test the property ptzCenterOnPositionInView
        expect(instance).to.have.property('ptzCenterOnPositionInView');
        // expect(instance.ptzCenterOnPositionInView).to.be(expectedValueLiteral);
      });

      it('should have the property ptzCenterAndZoomToRectangle (base name: "ptzCenterAndZoomToRectangle")', function() {
        // TODO: update the code to test the property ptzCenterAndZoomToRectangle
        expect(instance).to.have.property('ptzCenterAndZoomToRectangle');
        // expect(instance.ptzCenterAndZoomToRectangle).to.be(expectedValueLiteral);
      });

      it('should have the property ptzHomeSupport (base name: "ptzHomeSupport")', function() {
        // TODO: update the code to test the property ptzHomeSupport
        expect(instance).to.have.property('ptzHomeSupport');
        // expect(instance.ptzHomeSupport).to.be(expectedValueLiteral);
      });

      it('should have the property ptzDiagonalSupport (base name: "ptzDiagonalSupport")', function() {
        // TODO: update the code to test the property ptzDiagonalSupport
        expect(instance).to.have.property('ptzDiagonalSupport');
        // expect(instance.ptzDiagonalSupport).to.be(expectedValueLiteral);
      });

      it('should have the property ptzIpix (base name: "ptzIpix")', function() {
        // TODO: update the code to test the property ptzIpix
        expect(instance).to.have.property('ptzIpix');
        // expect(instance.ptzIpix).to.be(expectedValueLiteral);
      });

      it('should have the property pan (base name: "pan")', function() {
        // TODO: update the code to test the property pan
        expect(instance).to.have.property('pan');
        // expect(instance.pan).to.be(expectedValueLiteral);
      });

      it('should have the property tilt (base name: "tilt")', function() {
        // TODO: update the code to test the property tilt
        expect(instance).to.have.property('tilt');
        // expect(instance.tilt).to.be(expectedValueLiteral);
      });

      it('should have the property zoom (base name: "zoom")', function() {
        // TODO: update the code to test the property zoom
        expect(instance).to.have.property('zoom');
        // expect(instance.zoom).to.be(expectedValueLiteral);
      });

      it('should have the property ptzPresetConfiguration (base name: "ptzPresetConfiguration")', function() {
        // TODO: update the code to test the property ptzPresetConfiguration
        expect(instance).to.have.property('ptzPresetConfiguration');
        // expect(instance.ptzPresetConfiguration).to.be(expectedValueLiteral);
      });

    });
  });

}));
