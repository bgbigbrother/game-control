/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilestoneIntegrationPlatformVmsResTfulApi.RSApi();
  });

  describe('(package)', function() {
    describe('RSApi', function() {
      describe('deletefailoverGroupsById', function() {
        it('should call deletefailoverGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletefailoverGroupsById call and complete the assertions
          /*

          instance.deletefailoverGroupsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2018);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleterecordingServersByIdhardware', function() {
        it('should call deleterecordingServersByIdhardware successfully', function(done) {
          // TODO: uncomment, update parameter values for deleterecordingServersByIdhardware call and complete the assertions
          /*

          instance.deleterecordingServersByIdhardware(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20065);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleterecordingServersByIdstorages', function() {
        it('should call deleterecordingServersByIdstorages successfully', function(done) {
          // TODO: uncomment, update parameter values for deleterecordingServersByIdstorages call and complete the assertions
          /*

          instance.deleterecordingServersByIdstorages(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20121);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllfailoverGroups', function() {
        it('should call getAllfailoverGroups successfully', function(done) {
          // TODO: uncomment getAllfailoverGroups call and complete the assertions
          /*

          instance.getAllfailoverGroups(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20052);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllfailoverRecorders', function() {
        it('should call getAllfailoverRecorders successfully', function(done) {
          // TODO: uncomment getAllfailoverRecorders call and complete the assertions
          /*

          instance.getAllfailoverRecorders(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20055);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllfailoverRecordersInAfailoverGroups', function() {
        it('should call getAllfailoverRecordersInAfailoverGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllfailoverRecordersInAfailoverGroups call and complete the assertions
          /*

          instance.getAllfailoverRecordersInAfailoverGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20055);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllhardwareDriversInArecordingServers', function() {
        it('should call getAllhardwareDriversInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllhardwareDriversInArecordingServers call and complete the assertions
          /*

          instance.getAllhardwareDriversInArecordingServers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200126);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllhardwareInArecordingServers', function() {
        it('should call getAllhardwareInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllhardwareInArecordingServers call and complete the assertions
          /*

          instance.getAllhardwareInArecordingServers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20063);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllrecordingServerFailovers', function() {
        it('should call getAllrecordingServerFailovers successfully', function(done) {
          // TODO: uncomment getAllrecordingServerFailovers call and complete the assertions
          /*

          instance.getAllrecordingServerFailovers(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200127);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllrecordingServerFailoversInArecordingServers', function() {
        it('should call getAllrecordingServerFailoversInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllrecordingServerFailoversInArecordingServers call and complete the assertions
          /*

          instance.getAllrecordingServerFailoversInArecordingServers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200127);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllrecordingServerMulticasts', function() {
        it('should call getAllrecordingServerMulticasts successfully', function(done) {
          // TODO: uncomment getAllrecordingServerMulticasts call and complete the assertions
          /*

          instance.getAllrecordingServerMulticasts(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllrecordingServerMulticastsInArecordingServers', function() {
        it('should call getAllrecordingServerMulticastsInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllrecordingServerMulticastsInArecordingServers call and complete the assertions
          /*

          instance.getAllrecordingServerMulticastsInArecordingServers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllrecordingServers', function() {
        it('should call getAllrecordingServers successfully', function(done) {
          // TODO: uncomment getAllrecordingServers call and complete the assertions
          /*

          instance.getAllrecordingServers(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200122);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllstoragesInArecordingServers', function() {
        it('should call getAllstoragesInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllstoragesInArecordingServers call and complete the assertions
          /*

          instance.getAllstoragesInArecordingServers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnehardwareDriversInArecordingServers', function() {
        it('should call getOnehardwareDriversInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnehardwareDriversInArecordingServers call and complete the assertions
          /*

          instance.getOnehardwareDriversInArecordingServers(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200126);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnestoragesInArecordingServers', function() {
        it('should call getOnestoragesInArecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnestoragesInArecordingServers call and complete the assertions
          /*

          instance.getOnestoragesInArecordingServers(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getfailoverGroupsById', function() {
        it('should call getfailoverGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getfailoverGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.getfailoverGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20054);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getfailoverRecordersById', function() {
        it('should call getfailoverRecordersById successfully', function(done) {
          // TODO: uncomment, update parameter values for getfailoverRecordersById call and complete the assertions
          /*
          var opts = {};

          instance.getfailoverRecordersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20056);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getrecordingServerFailoversById', function() {
        it('should call getrecordingServerFailoversById successfully', function(done) {
          // TODO: uncomment, update parameter values for getrecordingServerFailoversById call and complete the assertions
          /*
          var opts = {};

          instance.getrecordingServerFailoversById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200130);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getrecordingServerMulticastsById', function() {
        it('should call getrecordingServerMulticastsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getrecordingServerMulticastsById call and complete the assertions
          /*
          var opts = {};

          instance.getrecordingServerMulticastsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200132);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getrecordingServersById', function() {
        it('should call getrecordingServersById successfully', function(done) {
          // TODO: uncomment, update parameter values for getrecordingServersById call and complete the assertions
          /*
          var opts = {};

          instance.getrecordingServersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200123);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchfailoverGroupsById', function() {
        it('should call patchfailoverGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchfailoverGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.patchfailoverGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2018);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchfailoverRecordersById', function() {
        it('should call patchfailoverRecordersById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchfailoverRecordersById call and complete the assertions
          /*
          var opts = {};

          instance.patchfailoverRecordersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20057);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchrecordingServerFailoversById', function() {
        it('should call patchrecordingServerFailoversById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchrecordingServerFailoversById call and complete the assertions
          /*
          var opts = {};

          instance.patchrecordingServerFailoversById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchrecordingServerMulticastsById', function() {
        it('should call patchrecordingServerMulticastsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchrecordingServerMulticastsById call and complete the assertions
          /*
          var opts = {};

          instance.patchrecordingServerMulticastsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200133);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchrecordingServersById', function() {
        it('should call patchrecordingServersById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchrecordingServersById call and complete the assertions
          /*
          var opts = {};

          instance.patchrecordingServersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200124);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForrecordingServers', function() {
        it('should call postTaskForrecordingServers successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForrecordingServers call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForrecordingServers(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200125);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postfailoverGroupsById', function() {
        it('should call postfailoverGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postfailoverGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.postfailoverGroupsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20053);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postrecordingServersByIdstorages', function() {
        it('should call postrecordingServersByIdstorages successfully', function(done) {
          // TODO: uncomment, update parameter values for postrecordingServersByIdstorages call and complete the assertions
          /*
          var opts = {};

          instance.postrecordingServersByIdstorages(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20121);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putfailoverGroupsById', function() {
        it('should call putfailoverGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putfailoverGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.putfailoverGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2018);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putfailoverRecordersById', function() {
        it('should call putfailoverRecordersById successfully', function(done) {
          // TODO: uncomment, update parameter values for putfailoverRecordersById call and complete the assertions
          /*
          var opts = {};

          instance.putfailoverRecordersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20057);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putrecordingServerFailoversById', function() {
        it('should call putrecordingServerFailoversById successfully', function(done) {
          // TODO: uncomment, update parameter values for putrecordingServerFailoversById call and complete the assertions
          /*
          var opts = {};

          instance.putrecordingServerFailoversById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putrecordingServerMulticastsById', function() {
        it('should call putrecordingServerMulticastsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putrecordingServerMulticastsById call and complete the assertions
          /*
          var opts = {};

          instance.putrecordingServerMulticastsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200133);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putrecordingServersById', function() {
        it('should call putrecordingServersById successfully', function(done) {
          // TODO: uncomment, update parameter values for putrecordingServersById call and complete the assertions
          /*
          var opts = {};

          instance.putrecordingServersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200124);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
