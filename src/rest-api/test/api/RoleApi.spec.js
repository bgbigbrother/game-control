/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilestoneIntegrationPlatformVmsResTfulApi.RoleApi();
  });

  describe('(package)', function() {
    describe('RoleApi', function() {
      describe('deletebasicUsersById', function() {
        it('should call deletebasicUsersById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletebasicUsersById call and complete the assertions
          /*

          instance.deletebasicUsersById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleterolesById', function() {
        it('should call deleterolesById successfully', function(done) {
          // TODO: uncomment, update parameter values for deleterolesById call and complete the assertions
          /*

          instance.deleterolesById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20122);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllbasicUsers', function() {
        it('should call getAllbasicUsers successfully', function(done) {
          // TODO: uncomment getAllbasicUsers call and complete the assertions
          /*

          instance.getAllbasicUsers(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20022);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllclaimsInAbasicUsers', function() {
        it('should call getAllclaimsInAbasicUsers successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllclaimsInAbasicUsers call and complete the assertions
          /*

          instance.getAllclaimsInAbasicUsers(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20025);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllclaimsInAroles', function() {
        it('should call getAllclaimsInAroles successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllclaimsInAroles call and complete the assertions
          /*

          instance.getAllclaimsInAroles(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20025);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllroles', function() {
        it('should call getAllroles successfully', function(done) {
          // TODO: uncomment getAllroles call and complete the assertions
          /*

          instance.getAllroles(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200135);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllusersInAroles', function() {
        it('should call getAllusersInAroles successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllusersInAroles call and complete the assertions
          /*

          instance.getAllusersInAroles(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200139);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOneusersInAroles', function() {
        it('should call getOneusersInAroles successfully', function(done) {
          // TODO: uncomment, update parameter values for getOneusersInAroles call and complete the assertions
          /*

          instance.getOneusersInAroles(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200139);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getbasicUsersById', function() {
        it('should call getbasicUsersById successfully', function(done) {
          // TODO: uncomment, update parameter values for getbasicUsersById call and complete the assertions
          /*
          var opts = {};

          instance.getbasicUsersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20023);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getrolesById', function() {
        it('should call getrolesById successfully', function(done) {
          // TODO: uncomment, update parameter values for getrolesById call and complete the assertions
          /*
          var opts = {};

          instance.getrolesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200137);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchbasicUsersById', function() {
        it('should call patchbasicUsersById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchbasicUsersById call and complete the assertions
          /*
          var opts = {};

          instance.patchbasicUsersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchrolesById', function() {
        it('should call patchrolesById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchrolesById call and complete the assertions
          /*
          var opts = {};

          instance.patchrolesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20122);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForbasicUsers', function() {
        it('should call postTaskForbasicUsers successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForbasicUsers call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForbasicUsers(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20024);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForroles', function() {
        it('should call postTaskForroles successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForroles call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForroles(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200138);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForrolesusers', function() {
        it('should call postTaskForrolesusers successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForrolesusers call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForrolesusers(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200140);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postbasicUsersById', function() {
        it('should call postbasicUsersById successfully', function(done) {
          // TODO: uncomment, update parameter values for postbasicUsersById call and complete the assertions
          /*
          var opts = {};

          instance.postbasicUsersById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postrolesById', function() {
        it('should call postrolesById successfully', function(done) {
          // TODO: uncomment, update parameter values for postrolesById call and complete the assertions
          /*
          var opts = {};

          instance.postrolesById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200136);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putbasicUsersById', function() {
        it('should call putbasicUsersById successfully', function(done) {
          // TODO: uncomment, update parameter values for putbasicUsersById call and complete the assertions
          /*
          var opts = {};

          instance.putbasicUsersById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putrolesById', function() {
        it('should call putrolesById successfully', function(done) {
          // TODO: uncomment, update parameter values for putrolesById call and complete the assertions
          /*
          var opts = {};

          instance.putrolesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20122);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
