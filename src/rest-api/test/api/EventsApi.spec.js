/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilestoneIntegrationPlatformVmsResTfulApi.EventsApi();
  });

  describe('(package)', function() {
    describe('EventsApi', function() {
      describe('deleteanalyticsEventsById', function() {
        it('should call deleteanalyticsEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteanalyticsEventsById call and complete the assertions
          /*

          instance.deleteanalyticsEventsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2011);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletegenericEventDataSourcesById', function() {
        it('should call deletegenericEventDataSourcesById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletegenericEventDataSourcesById call and complete the assertions
          /*

          instance.deletegenericEventDataSourcesById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20110);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletegenericEventsById', function() {
        it('should call deletegenericEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletegenericEventsById call and complete the assertions
          /*

          instance.deletegenericEventsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2019);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteuserDefinedEventsById', function() {
        it('should call deleteuserDefinedEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteuserDefinedEventsById call and complete the assertions
          /*

          instance.deleteuserDefinedEventsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllanalyticsEvents', function() {
        it('should call getAllanalyticsEvents successfully', function(done) {
          // TODO: uncomment getAllanalyticsEvents call and complete the assertions
          /*

          instance.getAllanalyticsEvents(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2009);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllanalyticsEventsInAeventTypeGroups', function() {
        it('should call getAllanalyticsEventsInAeventTypeGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllanalyticsEventsInAeventTypeGroups call and complete the assertions
          /*

          instance.getAllanalyticsEventsInAeventTypeGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2009);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlleventTypeGroups', function() {
        it('should call getAlleventTypeGroups successfully', function(done) {
          // TODO: uncomment getAlleventTypeGroups call and complete the assertions
          /*

          instance.getAlleventTypeGroups(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20046);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlleventTypesInAeventTypeGroups', function() {
        it('should call getAlleventTypesInAeventTypeGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAlleventTypesInAeventTypeGroups call and complete the assertions
          /*

          instance.getAlleventTypesInAeventTypeGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20049);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllgenericEventDataSources', function() {
        it('should call getAllgenericEventDataSources successfully', function(done) {
          // TODO: uncomment getAllgenericEventDataSources call and complete the assertions
          /*

          instance.getAllgenericEventDataSources(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20059);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllgenericEvents', function() {
        it('should call getAllgenericEvents successfully', function(done) {
          // TODO: uncomment getAllgenericEvents call and complete the assertions
          /*

          instance.getAllgenericEvents(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20050);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllgenericEventsInAeventTypeGroups', function() {
        it('should call getAllgenericEventsInAeventTypeGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllgenericEventsInAeventTypeGroups call and complete the assertions
          /*

          instance.getAllgenericEventsInAeventTypeGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20050);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlluserDefinedEvents', function() {
        it('should call getAlluserDefinedEvents successfully', function(done) {
          // TODO: uncomment getAlluserDefinedEvents call and complete the assertions
          /*

          instance.getAlluserDefinedEvents(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20051);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlluserDefinedEventsInAeventTypeGroups', function() {
        it('should call getAlluserDefinedEventsInAeventTypeGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAlluserDefinedEventsInAeventTypeGroups call and complete the assertions
          /*

          instance.getAlluserDefinedEventsInAeventTypeGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20051);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getanalyticsEventsById', function() {
        it('should call getanalyticsEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getanalyticsEventsById call and complete the assertions
          /*
          var opts = {};

          instance.getanalyticsEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20010);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('geteventTypeGroupsById', function() {
        it('should call geteventTypeGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for geteventTypeGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.geteventTypeGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20047);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('geteventTypesById', function() {
        it('should call geteventTypesById successfully', function(done) {
          // TODO: uncomment, update parameter values for geteventTypesById call and complete the assertions
          /*
          var opts = {};

          instance.geteventTypesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20044);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getgenericEventDataSourcesById', function() {
        it('should call getgenericEventDataSourcesById successfully', function(done) {
          // TODO: uncomment, update parameter values for getgenericEventDataSourcesById call and complete the assertions
          /*
          var opts = {};

          instance.getgenericEventDataSourcesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20060);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getgenericEventsById', function() {
        it('should call getgenericEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getgenericEventsById call and complete the assertions
          /*
          var opts = {};

          instance.getgenericEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20058);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getuserDefinedEventsById', function() {
        it('should call getuserDefinedEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getuserDefinedEventsById call and complete the assertions
          /*
          var opts = {};

          instance.getuserDefinedEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200174);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchanalyticsEventsById', function() {
        it('should call patchanalyticsEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchanalyticsEventsById call and complete the assertions
          /*
          var opts = {};

          instance.patchanalyticsEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2011);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patcheventTypeGroupsById', function() {
        it('should call patcheventTypeGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patcheventTypeGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.patcheventTypeGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20048);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patcheventTypesById', function() {
        it('should call patcheventTypesById successfully', function(done) {
          // TODO: uncomment, update parameter values for patcheventTypesById call and complete the assertions
          /*
          var opts = {};

          instance.patcheventTypesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20045);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchgenericEventDataSourcesById', function() {
        it('should call patchgenericEventDataSourcesById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchgenericEventDataSourcesById call and complete the assertions
          /*
          var opts = {};

          instance.patchgenericEventDataSourcesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20110);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchgenericEventsById', function() {
        it('should call patchgenericEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchgenericEventsById call and complete the assertions
          /*
          var opts = {};

          instance.patchgenericEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2019);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchuserDefinedEventsById', function() {
        it('should call patchuserDefinedEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchuserDefinedEventsById call and complete the assertions
          /*
          var opts = {};

          instance.patchuserDefinedEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForuserDefinedEvents', function() {
        it('should call postTaskForuserDefinedEvents successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForuserDefinedEvents call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForuserDefinedEvents(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20080);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postanalyticsEventsById', function() {
        it('should call postanalyticsEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postanalyticsEventsById call and complete the assertions
          /*
          var opts = {};

          instance.postanalyticsEventsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2011);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postgenericEventDataSourcesById', function() {
        it('should call postgenericEventDataSourcesById successfully', function(done) {
          // TODO: uncomment, update parameter values for postgenericEventDataSourcesById call and complete the assertions
          /*
          var opts = {};

          instance.postgenericEventDataSourcesById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20110);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postgenericEventsById', function() {
        it('should call postgenericEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postgenericEventsById call and complete the assertions
          /*
          var opts = {};

          instance.postgenericEventsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2019);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postuserDefinedEventsById', function() {
        it('should call postuserDefinedEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postuserDefinedEventsById call and complete the assertions
          /*
          var opts = {};

          instance.postuserDefinedEventsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putanalyticsEventsById', function() {
        it('should call putanalyticsEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putanalyticsEventsById call and complete the assertions
          /*
          var opts = {};

          instance.putanalyticsEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2011);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('puteventTypeGroupsById', function() {
        it('should call puteventTypeGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for puteventTypeGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.puteventTypeGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20048);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('puteventTypesById', function() {
        it('should call puteventTypesById successfully', function(done) {
          // TODO: uncomment, update parameter values for puteventTypesById call and complete the assertions
          /*
          var opts = {};

          instance.puteventTypesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20045);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putgenericEventDataSourcesById', function() {
        it('should call putgenericEventDataSourcesById successfully', function(done) {
          // TODO: uncomment, update parameter values for putgenericEventDataSourcesById call and complete the assertions
          /*
          var opts = {};

          instance.putgenericEventDataSourcesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20110);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putgenericEventsById', function() {
        it('should call putgenericEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putgenericEventsById call and complete the assertions
          /*
          var opts = {};

          instance.putgenericEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2019);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putuserDefinedEventsById', function() {
        it('should call putuserDefinedEventsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putuserDefinedEventsById call and complete the assertions
          /*
          var opts = {};

          instance.putuserDefinedEventsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20128);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
