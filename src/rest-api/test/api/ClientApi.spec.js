/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilestoneIntegrationPlatformVmsResTfulApi.ClientApi();
  });

  describe('(package)', function() {
    describe('ClientApi', function() {
      describe('deleteclientProfilesById', function() {
        it('should call deleteclientProfilesById successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteclientProfilesById call and complete the assertions
          /*

          instance.deleteclientProfilesById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletegisMapLocationsById', function() {
        it('should call deletegisMapLocationsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletegisMapLocationsById call and complete the assertions
          /*

          instance.deletegisMapLocationsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20111);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletelayoutGroupsByIdlayouts', function() {
        it('should call deletelayoutGroupsByIdlayouts successfully', function(done) {
          // TODO: uncomment, update parameter values for deletelayoutGroupsByIdlayouts call and complete the assertions
          /*

          instance.deletelayoutGroupsByIdlayouts(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20113);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletesaveSearchesById', function() {
        it('should call deletesaveSearchesById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletesaveSearchesById call and complete the assertions
          /*

          instance.deletesaveSearchesById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20124);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletevideoWallsById', function() {
        it('should call deletevideoWallsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deletevideoWallsById call and complete the assertions
          /*

          instance.deletevideoWallsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletevideoWallsByIdmonitors', function() {
        it('should call deletevideoWallsByIdmonitors successfully', function(done) {
          // TODO: uncomment, update parameter values for deletevideoWallsByIdmonitors call and complete the assertions
          /*

          instance.deletevideoWallsByIdmonitors(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20130);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deletevideoWallsByIdvideoWallPresets', function() {
        it('should call deletevideoWallsByIdvideoWallPresets successfully', function(done) {
          // TODO: uncomment, update parameter values for deletevideoWallsByIdvideoWallPresets call and complete the assertions
          /*

          instance.deletevideoWallsByIdvideoWallPresets(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteviewGroupsById', function() {
        it('should call deleteviewGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteviewGroupsById call and complete the assertions
          /*

          instance.deleteviewGroupsById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20132);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteviewGroupsByIdviews', function() {
        it('should call deleteviewGroupsByIdviews successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteviewGroupsByIdviews call and complete the assertions
          /*

          instance.deleteviewGroupsByIdviews(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200182);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllclientProfiles', function() {
        it('should call getAllclientProfiles successfully', function(done) {
          // TODO: uncomment getAllclientProfiles call and complete the assertions
          /*

          instance.getAllclientProfiles(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20042);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllgisMapLocations', function() {
        it('should call getAllgisMapLocations successfully', function(done) {
          // TODO: uncomment getAllgisMapLocations call and complete the assertions
          /*

          instance.getAllgisMapLocations(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20061);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlllayoutGroups', function() {
        it('should call getAlllayoutGroups successfully', function(done) {
          // TODO: uncomment getAlllayoutGroups call and complete the assertions
          /*

          instance.getAlllayoutGroups(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20083);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAlllayoutsInAlayoutGroups', function() {
        it('should call getAlllayoutsInAlayoutGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAlllayoutsInAlayoutGroups call and complete the assertions
          /*

          instance.getAlllayoutsInAlayoutGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20086);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllmonitorPresetsInAmonitors', function() {
        it('should call getAllmonitorPresetsInAmonitors successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllmonitorPresetsInAmonitors call and complete the assertions
          /*

          instance.getAllmonitorPresetsInAmonitors(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200114);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllmonitorsInAvideoWalls', function() {
        it('should call getAllmonitorsInAvideoWalls successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllmonitorsInAvideoWalls call and complete the assertions
          /*

          instance.getAllmonitorsInAvideoWalls(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200176);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllsaveSearches', function() {
        it('should call getAllsaveSearches successfully', function(done) {
          // TODO: uncomment getAllsaveSearches call and complete the assertions
          /*

          instance.getAllsaveSearches(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200143);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllvideoWallPresets', function() {
        it('should call getAllvideoWallPresets successfully', function(done) {
          // TODO: uncomment getAllvideoWallPresets call and complete the assertions
          /*

          instance.getAllvideoWallPresets(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200177);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllvideoWallPresetsInAvideoWalls', function() {
        it('should call getAllvideoWallPresetsInAvideoWalls successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllvideoWallPresetsInAvideoWalls call and complete the assertions
          /*

          instance.getAllvideoWallPresetsInAvideoWalls(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200177);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllvideoWalls', function() {
        it('should call getAllvideoWalls successfully', function(done) {
          // TODO: uncomment getAllvideoWalls call and complete the assertions
          /*

          instance.getAllvideoWalls(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200169);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllviewGroups', function() {
        it('should call getAllviewGroups successfully', function(done) {
          // TODO: uncomment getAllviewGroups call and complete the assertions
          /*

          instance.getAllviewGroups(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200170);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllviewGroupsInAviewGroups', function() {
        it('should call getAllviewGroupsInAviewGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllviewGroupsInAviewGroups call and complete the assertions
          /*

          instance.getAllviewGroupsInAviewGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200170);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllviews', function() {
        it('should call getAllviews successfully', function(done) {
          // TODO: uncomment getAllviews call and complete the assertions
          /*

          instance.getAllviews(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200180);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllviewsInAviewGroups', function() {
        it('should call getAllviewsInAviewGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllviewsInAviewGroups call and complete the assertions
          /*

          instance.getAllviewsInAviewGroups(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200180);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnelayoutsInAlayoutGroups', function() {
        it('should call getOnelayoutsInAlayoutGroups successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnelayoutsInAlayoutGroups call and complete the assertions
          /*

          instance.getOnelayoutsInAlayoutGroups(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20086);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnemonitorPresetsInAmonitors', function() {
        it('should call getOnemonitorPresetsInAmonitors successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnemonitorPresetsInAmonitors call and complete the assertions
          /*

          instance.getOnemonitorPresetsInAmonitors(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200114);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnemonitorsInAvideoWalls', function() {
        it('should call getOnemonitorsInAvideoWalls successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnemonitorsInAvideoWalls call and complete the assertions
          /*

          instance.getOnemonitorsInAvideoWalls(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200176);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getclientProfilesById', function() {
        it('should call getclientProfilesById successfully', function(done) {
          // TODO: uncomment, update parameter values for getclientProfilesById call and complete the assertions
          /*
          var opts = {};

          instance.getclientProfilesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20043);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getgisMapLocationsById', function() {
        it('should call getgisMapLocationsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getgisMapLocationsById call and complete the assertions
          /*
          var opts = {};

          instance.getgisMapLocationsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20062);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getlayoutGroupsById', function() {
        it('should call getlayoutGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getlayoutGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.getlayoutGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20084);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getsaveSearchesById', function() {
        it('should call getsaveSearchesById successfully', function(done) {
          // TODO: uncomment, update parameter values for getsaveSearchesById call and complete the assertions
          /*
          var opts = {};

          instance.getsaveSearchesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200145);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getvideoWallPresetsById', function() {
        it('should call getvideoWallPresetsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getvideoWallPresetsById call and complete the assertions
          /*
          var opts = {};

          instance.getvideoWallPresetsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200178);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getvideoWallsById', function() {
        it('should call getvideoWallsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getvideoWallsById call and complete the assertions
          /*
          var opts = {};

          instance.getvideoWallsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200175);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getviewGroupsById', function() {
        it('should call getviewGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getviewGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.getviewGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200183);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getviewsById', function() {
        it('should call getviewsById successfully', function(done) {
          // TODO: uncomment, update parameter values for getviewsById call and complete the assertions
          /*
          var opts = {};

          instance.getviewsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200181);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchclientProfilesById', function() {
        it('should call patchclientProfilesById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchclientProfilesById call and complete the assertions
          /*
          var opts = {};

          instance.patchclientProfilesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchgisMapLocationsById', function() {
        it('should call patchgisMapLocationsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchgisMapLocationsById call and complete the assertions
          /*
          var opts = {};

          instance.patchgisMapLocationsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20111);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchlayoutGroupsById', function() {
        it('should call patchlayoutGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchlayoutGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.patchlayoutGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20085);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchsaveSearchesById', function() {
        it('should call patchsaveSearchesById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchsaveSearchesById call and complete the assertions
          /*
          var opts = {};

          instance.patchsaveSearchesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20124);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchvideoWallPresetsById', function() {
        it('should call patchvideoWallPresetsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchvideoWallPresetsById call and complete the assertions
          /*
          var opts = {};

          instance.patchvideoWallPresetsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchvideoWallsById', function() {
        it('should call patchvideoWallsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchvideoWallsById call and complete the assertions
          /*
          var opts = {};

          instance.patchvideoWallsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchviewGroupsById', function() {
        it('should call patchviewGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchviewGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.patchviewGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20132);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchviewsById', function() {
        it('should call patchviewsById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchviewsById call and complete the assertions
          /*
          var opts = {};

          instance.patchviewsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200182);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForclientProfiles', function() {
        it('should call postTaskForclientProfiles successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForclientProfiles call and complete the assertions
          /*

          instance.postTaskForclientProfiles(id, task, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskFormonitors', function() {
        it('should call postTaskFormonitors successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskFormonitors call and complete the assertions
          /*
          var opts = {};

          instance.postTaskFormonitors(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200115);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForvideoWallPresets', function() {
        it('should call postTaskForvideoWallPresets successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForvideoWallPresets call and complete the assertions
          /*

          instance.postTaskForvideoWallPresets(id, task, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200179);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForvideoWalls', function() {
        it('should call postTaskForvideoWalls successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForvideoWalls call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForvideoWalls(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20080);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postclientProfilesById', function() {
        it('should call postclientProfilesById successfully', function(done) {
          // TODO: uncomment, update parameter values for postclientProfilesById call and complete the assertions
          /*
          var opts = {};

          instance.postclientProfilesById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postgisMapLocationsById', function() {
        it('should call postgisMapLocationsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postgisMapLocationsById call and complete the assertions
          /*
          var opts = {};

          instance.postgisMapLocationsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20111);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postlayoutGroupsByIdlayouts', function() {
        it('should call postlayoutGroupsByIdlayouts successfully', function(done) {
          // TODO: uncomment, update parameter values for postlayoutGroupsByIdlayouts call and complete the assertions
          /*
          var opts = {};

          instance.postlayoutGroupsByIdlayouts(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20113);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postsaveSearchesById', function() {
        it('should call postsaveSearchesById successfully', function(done) {
          // TODO: uncomment, update parameter values for postsaveSearchesById call and complete the assertions
          /*
          var opts = {};

          instance.postsaveSearchesById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200144);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postvideoWallsById', function() {
        it('should call postvideoWallsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postvideoWallsById call and complete the assertions
          /*
          var opts = {};

          instance.postvideoWallsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postvideoWallsByIdmonitors', function() {
        it('should call postvideoWallsByIdmonitors successfully', function(done) {
          // TODO: uncomment, update parameter values for postvideoWallsByIdmonitors call and complete the assertions
          /*
          var opts = {};

          instance.postvideoWallsByIdmonitors(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20130);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postvideoWallsByIdvideoWallPresets', function() {
        it('should call postvideoWallsByIdvideoWallPresets successfully', function(done) {
          // TODO: uncomment, update parameter values for postvideoWallsByIdvideoWallPresets call and complete the assertions
          /*
          var opts = {};

          instance.postvideoWallsByIdvideoWallPresets(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postviewGroupsById', function() {
        it('should call postviewGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for postviewGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.postviewGroupsById(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20132);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postviewGroupsByIdviews', function() {
        it('should call postviewGroupsByIdviews successfully', function(done) {
          // TODO: uncomment, update parameter values for postviewGroupsByIdviews call and complete the assertions
          /*
          var opts = {};

          instance.postviewGroupsByIdviews(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200182);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putclientProfilesById', function() {
        it('should call putclientProfilesById successfully', function(done) {
          // TODO: uncomment, update parameter values for putclientProfilesById call and complete the assertions
          /*
          var opts = {};

          instance.putclientProfilesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse2017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putgisMapLocationsById', function() {
        it('should call putgisMapLocationsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putgisMapLocationsById call and complete the assertions
          /*
          var opts = {};

          instance.putgisMapLocationsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20111);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putlayoutGroupsById', function() {
        it('should call putlayoutGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putlayoutGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.putlayoutGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20085);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putsaveSearchesById', function() {
        it('should call putsaveSearchesById successfully', function(done) {
          // TODO: uncomment, update parameter values for putsaveSearchesById call and complete the assertions
          /*
          var opts = {};

          instance.putsaveSearchesById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20124);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putvideoWallPresetsById', function() {
        it('should call putvideoWallPresetsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putvideoWallPresetsById call and complete the assertions
          /*
          var opts = {};

          instance.putvideoWallPresetsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20131);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putvideoWallsById', function() {
        it('should call putvideoWallsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putvideoWallsById call and complete the assertions
          /*
          var opts = {};

          instance.putvideoWallsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20129);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putviewGroupsById', function() {
        it('should call putviewGroupsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putviewGroupsById call and complete the assertions
          /*
          var opts = {};

          instance.putviewGroupsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20132);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putviewsById', function() {
        it('should call putviewsById successfully', function(done) {
          // TODO: uncomment, update parameter values for putviewsById call and complete the assertions
          /*
          var opts = {};

          instance.putviewsById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200182);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
