/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilestoneIntegrationPlatformVmsResTfulApi);
  }
}(this, function(expect, MilestoneIntegrationPlatformVmsResTfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilestoneIntegrationPlatformVmsResTfulApi.StorageApi();
  });

  describe('(package)', function() {
    describe('StorageApi', function() {
      describe('deletestoragesByIdarchiveStorages', function() {
        it('should call deletestoragesByIdarchiveStorages successfully', function(done) {
          // TODO: uncomment, update parameter values for deletestoragesByIdarchiveStorages call and complete the assertions
          /*

          instance.deletestoragesByIdarchiveStorages(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20126);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllarchiveStorageInformation', function() {
        it('should call getAllarchiveStorageInformation successfully', function(done) {
          // TODO: uncomment getAllarchiveStorageInformation call and complete the assertions
          /*

          instance.getAllarchiveStorageInformation(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20012);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllarchiveStoragesInAstorages', function() {
        it('should call getAllarchiveStoragesInAstorages successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllarchiveStoragesInAstorages call and complete the assertions
          /*

          instance.getAllarchiveStoragesInAstorages(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200154);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllstorageInformation', function() {
        it('should call getAllstorageInformation successfully', function(done) {
          // TODO: uncomment getAllstorageInformation call and complete the assertions
          /*

          instance.getAllstorageInformation(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200156);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOnearchiveStoragesInAstorages', function() {
        it('should call getOnearchiveStoragesInAstorages successfully', function(done) {
          // TODO: uncomment, update parameter values for getOnearchiveStoragesInAstorages call and complete the assertions
          /*

          instance.getOnearchiveStoragesInAstorages(idParent, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200154);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getarchiveStorageInformationById', function() {
        it('should call getarchiveStorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for getarchiveStorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.getarchiveStorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getstorageInformationById', function() {
        it('should call getstorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for getstorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.getstorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200157);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patcharchiveStorageInformationById', function() {
        it('should call patcharchiveStorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for patcharchiveStorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.patcharchiveStorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20014);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('patchstorageInformationById', function() {
        it('should call patchstorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for patchstorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.patchstorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200158);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForarchiveStorages', function() {
        it('should call postTaskForarchiveStorages successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForarchiveStorages call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForarchiveStorages(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20011);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postTaskForstorages', function() {
        it('should call postTaskForstorages successfully', function(done) {
          // TODO: uncomment, update parameter values for postTaskForstorages call and complete the assertions
          /*
          var opts = {};

          instance.postTaskForstorages(id, task, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200155);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('poststoragesByIdarchiveStorages', function() {
        it('should call poststoragesByIdarchiveStorages successfully', function(done) {
          // TODO: uncomment, update parameter values for poststoragesByIdarchiveStorages call and complete the assertions
          /*
          var opts = {};

          instance.poststoragesByIdarchiveStorages(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20126);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putarchiveStorageInformationById', function() {
        it('should call putarchiveStorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for putarchiveStorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.putarchiveStorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse20014);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('putstorageInformationById', function() {
        it('should call putstorageInformationById successfully', function(done) {
          // TODO: uncomment, update parameter values for putstorageInformationById call and complete the assertions
          /*
          var opts = {};

          instance.putstorageInformationById(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilestoneIntegrationPlatformVmsResTfulApi.InlineResponse200158);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
